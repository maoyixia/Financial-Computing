import java.util.Arrays;

/**
 * Use AntiThetic approach to achieve faster convergence 
 * @author yixia
 *
 */
public class AntiTheticRandomVectorGeneratorImpl extends AntiTheticDecorator {
	public AntiTheticRandomVectorGeneratorImpl (RandomVectorGeneratorImpl decoratedRVG) {
		super(decoratedRVG);
	}
	
	double[] lastVector;
	
	/**
	 * Method used to implement AntiThetic
	 * Suppose we use n1,...,nk to generate a path
	 * The next path is generated by -n1,...,-nk
	 */
	@Override
	public double[] getVector() {
		if (lastVector == null) {
			lastVector = decoratedRVG.getVector();
			return lastVector;
		}
		
		else {
			double[] tmp = Arrays.copyOf(lastVector,lastVector.length);
			lastVector = null;
			for(int i=0;i<tmp.length;i++) {
				tmp[i] = -tmp[i];
			}
			return tmp;
		}
	}
	
}
